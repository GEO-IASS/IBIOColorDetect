function params = colorSpotResponseParamsGenerate(varargin)
% params = colorSpotResponseParamsGenerate(varargin)
%
% This specifies the parameter structure for generating
% responses in the form expected by other programs in this project.  It
% provides reasonable illustrative defaults, although in real calculations
% it would be natural to vary many of these parameters.
%
% This returns a struct of structs, with each substruct generated by its
% own function.  See the help functions for the individual routines for what
% fields get set.  This routine, however, coordinates some fields across the
% various structs (e.g., field of view).
%
% See also:
%   spotParamsGenerate
%   colorModulationParamsGenerate
%   temporalParamsGenerate
%   mosaicParamsGenerate
%   plotParamsGenerate

%% Type field for parameters
params.type = 'SpotResponseGeneration';
 
%% Define Gabor spatial parameters
params.spotSpatialParams = spotSpatialParamsGenerate(varargin{:});

%% Define background/CRT params
params.backgroundParams = backgroundParamsGenerate('backgroundType','AO',varargin{:});

%% Define color modulation parameters
params.colorModulationParams = colorModulationParamsGenerate('modulationType','AO',varargin{:});

%% Parameters related to temporal properties of stimulus and response
params.temporalParams = temporalParamsGenerate(varargin{:});

%% Properties related to computing the retinal image
params.oiParams = oiParamsGenerate(varargin{:});
params.oiParams.fieldOfViewDegs = params.spotSpatialParams.backgroundSizeDegs;

%% Properties of the cone mosaic
params.mosaicParams = mosaicParamsGenerate(varargin{:});
params.mosaicParams.fieldOfViewDegs = params.spotSpatialParams.backgroundSizeDegs;
params.mosaicParams.timeStepInSeconds = params.temporalParams.stimulusSamplingIntervalInSeconds;
params.mosaicParams.integrationTimeInSeconds = params.mosaicParams.timeStepInSeconds;

%% Parameters for plots
params.plotParams = plotParamsGenerate(varargin{:});
